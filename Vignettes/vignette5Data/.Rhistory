ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration")
stripPlot + stat_summary(fun.y=median, geom="point", shape=13, size=8, color="black") + theme_classic()
boxPlot <- ggplot(normalize.df, aes(x=as.factor(Concentration), y=normalized, color=Sample)) +
geom_boxplot() +
xlab("Concentration") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample")
boxPlot + stat_summary(fun.y=median, geom="point", shape=13, size=8, alpha = 0.6, color="black") + theme_classic()
scatterPlot <- ggplot(normalize.df, aes(x=as.factor(Concentration), y=normalized, color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample")
scatterPlot + stat_summary(fun.y=median, geom="point", shape=13, size=8, color="black") + theme_classic()
normalize.df <- normalize.df %>% mutate(lConcentration = log(Concentration))
normalize.df$lConcentration[normalize.df$lConcentration == "-Inf"] <- -10
ggplot(normalize.df, aes(x=lConcentration, y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample") +
theme_classic()
normalize.df$lConcentration[normalize.df$lConcentration == "-Inf"] <- -1
ggplot(normalize.df, aes(x=lConcentration, y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample") +
theme_classic()
# Load data and change concentration to numeric
data1 <- read.csv("Proliferation(OutliersRemoved).csv" , header = T)
data1$Concentration <- gsub("uM", "", data1$Concentration) %>% as.numeric()
# Normalize the cell #s
normalize.df <- data1 %>%
split(f=.$Sample) %>%
lapply(.,function(df){
df$median <- median(df$Cells[which(df$Concentration==0)])
df$normalized <- df$Cells/df$median
df}) %>%
do.call("rbind",.)
normalize.df <- normalize.df %>% mutate(lConcentration = log(Concentration))
normalize.df$lConcentration[normalize.df$lConcentration == "-Inf"] <- -1
ggplot(normalize.df, aes(x=lConcentration, y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample") +
theme_classic()
scatterPlot2 <- ggplot(log(normalize.df), aes(x=as.factor(Concentration), y=normalized, color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample")
scatterPlot2 <- ggplot(normalize.df, aes(x=as.factor(Concentration), y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Concentration") +
labs(colour="Sample")
scatterPlot2 + stat_summary(fun.y=median, geom="point", shape=13, size=8, color="black") + theme_classic()
scatterPlot2 + stat_summary(fun.y=mean, geom="point", shape=13, size=8, color="black") + theme_classic()
scatterPlot + stat_summary(fun.y=mean, geom="point", shape=13, size=8, color="black") + theme_classic()
?aov
bartlett.test(log(normalized) ~ Sample, data = normalize.df)
bartlett.test(normalized ~ Sample, data = normalize.df)
# run an anova to determine if any of the group means is different
model <- aov(log(normalized) ~ Sample, data = normalize.df)
summary(model)
oneway.test(log(normalized) ~ Sample, data = normalize.df, var.equal = FALSE)
summary(model2)
model2 <- oneway.test(log(normalized) ~ Sample, data = normalize.df, var.equal = FALSE)
summary(model2)
# run an anova to determine if any of the group means is different
model <- aov(log(normalized) ~ Sample, data = normalize.df, var.equal = FALSE)
summary(model)
# run an anova to determine if any of the group means is different
model <- aov(log(normalized) ~ Sample, data = normalize.df)
summary(model)
oneway.test(log(normalized) ~ Sample, data = normalize.df, var.equal = FALSE)
# run an anova to determine if any of the group means is different
model <- aov(log(normalized) ~ Sample, data = normalize.df)
summary(model)
oneway.test(log(normalized) ~ Sample, data = normalize.df, var.equal = FALSE)
# determine which means are different between control and each group
DunnettTest(x = log(normalize.df$normalized), g = as.factor(normalize.df$Sample), control = "CDC45UI")
# strip plot with normalized cell numbers and median values plotted
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=log(normalized), color=as.character(Concentration))) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration")
stripPlot2 + stat_summary(fun.y=median, geom="point", shape=13, size=8, color="black") + theme_classic()
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=log(normalized))) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
)
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=log(normalized))) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
stripPlot2
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=normalized)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=normalized)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
stripPlot2
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=normalized)) +
geom_boxplot(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=normalized)) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
stripPlot2
ggplot(normalize.df, aes(x=Sample, y=log(normalized))) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample")
# box plot with normalized cell numbers and median values plotted
ggplot(normalize.df, aes(x=Sample, y=log(normalized), color=as.character(Concentration))) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration") +
theme_classic()
ggplot(normalize.df, aes(x=Sample, y=log(normalized), color=as.character(Concentration))) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration") +
theme_classic()
# box plot with normalized cell numbers and median values plotted
ggplot(normalize.df, aes(x=Sample, y=log(normalized))) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration") +
theme_classic()
# box plot with normalized cell numbers and median values plotted
ggplot(normalize.df, aes(x=Sample, y=log(normalized), fill = Sample)) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration") +
theme_classic()
library(tidyverse)
library(GGally)
library(lsmeans)
library(cowplot)
data1 <- read.csv("Proliferation(OutliersRemoved).csv" , header = T)
data1$Concentration <- gsub("uM", "", data1$Concentration) %>% as.numeric()
# make UNC5C df
UNC5C <- data1[,-c(3:4)] %>%
filter(Sample == "UNC5C")
# make SETX df
SETX <- data1[,-c(3:4)] %>%
filter(Sample == "SETX")
# make Nontrageting Control df
NT_Control <- data1[,-c(3:4)] %>%
filter(Sample == "NT_Control")
# make ADAM2 df
ADAM2 <- data1[,-c(3:4)] %>%
filter(Sample == "ADAM2")
# make CDC45 Uninfected df
CDC45UI <- data1[,-c(3:4)] %>%
filter(Sample == "CDC45UI")
# make CDC45 Uninfected df
UNC5C2 <- data1[,-c(3:4)] %>%
filter(Sample == "UNC5C2")
data2 <- data1 %>%
filter(Concentration==0) %>%
aggregate(Cells ~ Sample, data = ., median)
data3 <- data1 %>%
split(f=.$Sample) %>%
lapply(.,function(df){
df$median <- median(df$Cells[which(df$Concentration==0)])
df$normalized <- df$Cells/df$median
df}) %>%
do.call("rbind",.)
ggplot(data3, aes(x=Sample, y=normalized, color=as.character(Concentration))) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("")
data3 <- data2 %>%
filter(Sample == "UNC5C")
data3 <- data3 %>%
mutate("MedianValues" = median(data3$Cells))
data4 <- data2 %>%
filter(Sample == "SETX")
data4 <- data4 %>%
mutate("MedianValues" = median(data4$Cells))
data5 <- data2 %>%
filter(Sample == "ADAM2")
data5 <- data5 %>%
mutate("MedianValues" = median(data5$Cells))
data6 <- data2 %>%
filter(Sample == "NT_Control")
data6 <- data6 %>%
mutate("MedianValues" = median(data6$Cells))
data7 <- data2 %>%
filter(Sample == "CDC45UI")
data7 <- data7 %>%
mutate("MedianValues" = median(data7$Cells))
test1 <- data1 %>%
filter(Concentration != "0")
test2 <- test1 %>%
mutate("MedianValues" = test1$Cells)
test2
test1
data1 <- read.csv("Proliferation(OutliersRemoved).csv" , header = T)
head(data1)
data1$Concentration <- factor(data1$Concentration, levels = c("500uM", "50uM",
"10uM", "5uM", "2.5uM",
"1.25uM", "0.625uM","0uM"))
str(data1)
ggplot(data1, aes(x=Sample, y=Cells, color = Concentration)) +
geom_boxplot()
ggpairs(data1, columns = c(5,2,1), aes(color = Sample))
ggplot(data1, aes(x=Sample, y=Cells, color = Concentration)) +
geom_boxplot()
ggplot(data1, aes(x=Concentration, y=Cells, fill=Sample)) +
geom_histogram(stat = "Identity") +
facet_wrap(~Sample)
ggplot(data1, aes(x=Concentration, y=Cells, color = Sample)) +
geom_point()
########################################################################################
########################################################################################
data1$Concentration <- gsub("uM", "", data1$Concentration) %>% as.numeric()
# make UNC5C df
UNC5C <- data1[,-c(3:4)] %>%
filter(Sample == "UNC5C")
# make SETX df
SETX <- data1[,-c(3:4)] %>%
filter(Sample == "SETX")
# make Nontrageting Control df
NT_Control <- data1[,-c(3:4)] %>%
filter(Sample == "NT_Control")
# make ADAM2 df
ADAM2 <- data1[,-c(3:4)] %>%
filter(Sample == "ADAM2")
# make CDC45 Uninfected df
CDC45UI <- data1[,-c(3:4)] %>%
filter(Sample == "CDC45UI")
# make CDC45 Uninfected df
UNC5C2 <- data1[,-c(3:4)] %>%
filter(Sample == "UNC5C2")
# UNC5C strip plot
UNC5C %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 500) %>%
mutate("New0s" = median(Cells)) %>%
ggplot(aes(x=Concentration, y=Cells)) +
geom_jitter(width = 15, height = 0) +
geom_smooth(method = "lm")
CDC45UI %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 500) %>%
mutate("New0s" = median(Cells)) %>%
ggplot(aes(x=Concentration, y=Cells)) +
geom_jitter(width = 15, height = 0) +
geom_smooth(method = "lm")
# 500uM Auxin (UNC5C)
df1 <- UNC5C %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 500) %>%
mutate("New0s" = median(Cells))
df2 <- CDC45UI %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 500) %>%
mutate("New0s" = median(Cells))
plot1 <- ggplot() +
geom_jitter(data = df2, aes(x=Concentration, y=Cells), color = "blue" , width = 10, height = 0) +
geom_smooth(data = df2, aes(x=Concentration, y=Cells), color = "blue", method = "lm") +
geom_jitter(data = df1, aes(x=Concentration, y=Cells), color = "red" , width = 10, height = 0) +
geom_smooth(data = df1, aes(x=Concentration, y=Cells), color = "red", method = 'lm') +
ggtitle("500uM Auxin / Blue : CDC45UI / Red : UNC5C")
plot1
# 0.625uM Auxin (UNC5C)
df1a <- UNC5C %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 0.625) %>%
mutate("New0s" = median(Cells))
df2a <- CDC45UI %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 0.625) %>%
mutate("New0s" = median(Cells))
plot2 <- ggplot() +
geom_jitter(data = df2a, aes(x=Concentration, y=Cells), color = "blue" , width = 0.01, height = 0) +
geom_smooth(data = df2a, aes(x=Concentration, y=Cells), color = "blue", method = "lm") +
geom_jitter(data = df1a, aes(x=Concentration, y=Cells), color = "red" , width = 0.01, height = 0) +
geom_smooth(data = df1a, aes(x=Concentration, y=Cells), color = "red", method = 'lm') +
ggtitle("0.625uM Auxin / Blue : CDC45UI / Red : UNC5C")
plot2
# 500uM Auxin (SETX)
df3 <- SETX %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 500) %>%
mutate("New0s" = median(Cells))
plot3 <- ggplot() +
geom_jitter(data = df2, aes(x=Concentration, y=Cells), color = "purple" , width = 10, height = 0) +
geom_smooth(data = df2, aes(x=Concentration, y=Cells), color = "purple", method = "lm") +
geom_jitter(data = df3, aes(x=Concentration, y=Cells), color = "green" , width = 10, height = 0) +
geom_smooth(data = df3, aes(x=Concentration, y=Cells), color = "green", method = 'lm') +
ggtitle("500uM Auxin / Purple : CDC45UI / Green : SETX")
plot3
# 500uM Auxin (SETX)
df3a <- SETX %>% group_by(Concentration) %>%
filter(Concentration == 0 | Concentration == 0.625) %>%
mutate("New0s" = median(Cells))
plot4 <- ggplot() +
geom_jitter(data = df2a, aes(x=Concentration, y=Cells), color = "purple" , width = 0.01, height = 0) +
geom_smooth(data = df2a, aes(x=Concentration, y=Cells), color = "purple", method = "lm") +
geom_jitter(data = df3a, aes(x=Concentration, y=Cells), color = "green" , width = 0.01, height = 0) +
geom_smooth(data = df3a, aes(x=Concentration, y=Cells), color = "green", method = 'lm') +
ggtitle("0.625uM Auxin / Purple : CDC45UI / Green : SETX")
plot4
########################################################################################
########################################################################################
# cowplot them together
plots <- plot_grid(plot1,plot2,plot3,plot4, ncol = 2, labels = c("A","B","C","D"))
plots
#linear regression model
model <- lm(Cells ~ Concentration, data=data1)
summary(model)
# our data example
mod1 <- aov(Cells~Concentration*Sample, data=data1)
mod2 <- aov(Cells~Concentration+Sample, data=data1)
anova(mod1,mod2)
model1 <- lm(Cells~Concentration*Sample,data=data)
m.lst <- lstrends(model1, "Cells", var="Concentration")
slopeComparison <- pairs(m.lst)
slopeComparison
model1 <- lm(Cells~Concentration*Sample,data=data)
data1 <- read.csv("Proliferation(OutliersRemoved).csv" , header = T)
head(data1)
data1$Concentration <- factor(data1$Concentration, levels = c("500uM", "50uM",
"10uM", "5uM", "2.5uM",
"1.25uM", "0.625uM","0uM"))
str(data1)
ggplot(data1, aes(x=Sample, y=Cells, color = Concentration)) +
geom_boxplot()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(tidyverse)
library(lsmeans)
library(cowplot)
library(broom)
library(AICcmodavg)
library(AICcmodavg)
library(ggpubr)
library(ggExtra)
library(DescTools)
# Load data and change concentration to numeric
data1 <- read.csv("Proliferation(OutliersRemoved).csv" , header = T)
data1$Concentration <- gsub("uM", "", data1$Concentration) %>% as.numeric()
# Normalize the cell #s
normalize.df <- data1 %>%
split(f=.$Sample) %>%
lapply(.,function(df){
df$median <- median(df$Cells[which(df$Concentration==0)])
df$normalized <- df$Cells/df$median
df}) %>%
do.call("rbind",.)
# strip plot with normalized cell numbers and median values plotted
stripPlot <- ggplot(normalize.df, aes(x=Sample, y=normalized, color=as.character(Concentration))) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample (Mean of each group shown)") +
labs(colour="Concentration")
stripPlot + stat_summary(fun.y=median, geom="point", shape=13, size=8, color="black") + theme_classic()
# box plot with normalized cell numbers and median values plotted
ggplot(normalize.df, aes(x=Sample, y=normalized, fill = Sample)) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Sample") +
labs(colour="Concentration") +
theme_classic()
# strip plot with normalized cell numbers and median values plotted
stripPlot2 <- ggplot(normalize.df, aes(x=Sample, y=log(normalized), color=as.character(Concentration))) +
geom_jitter(height = 0, width = 0.15) +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("log(Normalized) Cell Counts by Sample (Mean of each group shown)") +
labs(colour="Concentration")
stripPlot2 + stat_summary(fun.y=median, geom="point", shape=13, size=8, color="black") + theme_classic()
# box plot with normalized cell numbers and median values plotted
ggplot(normalize.df, aes(x=Sample, y=log(normalized), fill = Sample)) +
geom_boxplot() +
xlab("Sample") +
ylab("Normalized Cell Counts") +
ggtitle("log(Normalized) Cell Counts by Sample") +
labs(colour="Concentration") +
theme_classic()
# run an anova to determine if any of the group means is different
model <- aov(log(normalized) ~ Sample, data = normalize.df)
summary(model)
# pool the variance and run Welch's ANOVA
oneway.test(log(normalized) ~ Sample, data = normalize.df, var.equal = FALSE)
# determine which means are different between control and each group
DunnettTest(x = log(normalize.df$normalized), g = as.factor(normalize.df$Sample), control = "CDC45UI")
data1 <- read.csv("Proliferation(OutliersRemoved).csv" , header = T)
head(data1)
data1$Concentration <- factor(data1$Concentration, levels = c("500uM", "50uM",
"10uM", "5uM", "2.5uM",
"1.25uM", "0.625uM","0uM"))
str(data1)
ggplot(data1, aes(x=Sample, y=Cells, color = Concentration)) +
geom_boxplot()
ggpairs(data1, columns = c(5,2,1), aes(color = Sample))
ggplot(data1, aes(x=Concentration, y=Cells, fill=Sample)) +
geom_histogram(stat = "Identity") +
facet_wrap(~Sample)
ggplot(data1, aes(x=Concentration, y=Cells, color = Sample)) +
geom_point()
scatterPlot2 <- ggplot(normalize.df, aes(x=as.factor(Concentration), y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Concentration (Mean for each group shown)") +
labs(colour="Sample")
scatterPlot2 + stat_summary(fun.y=mean, geom="point", shape=13, size=8, color="black") + theme_classic()
scatterPlot2 <- ggplot(normalize.df, aes(x=as.factor(Concentration), y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("Normalized Cell Counts") +
ggtitle("Normalized Cell Counts by Concentration (Mean for each group shown)") +
labs(colour="Sample")
scatterPlot2
ggplot(normalize.df, aes(x=as.factor(Concentration), y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Sample) +
theme_classic()
ggplot(normalize.df, aes(x=Sample, y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Concentration) +
theme_classic()
ggplot(normalize.df, aes(x=as.factor(Concentration), y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Sample) +
theme_classic()
ggplot(normalize.df, aes(x=Sample, y=normalized, color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Concentraion)
ggplot(normalize.df, aes(x=Sample, y=normalized, color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Concentration)
ggplot(normalize.df, aes(x=Sample, y=normalized, color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Concentration) +
theme_classic()
ggplot(normalize.df, aes(x=Sample, y=normalized, color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Concentration) +
theme_classic()
ggplot(normalize.df, aes(x=Sample, y=log(normalized), color=Sample)) +
geom_jitter(height = 0, width = 0.15) +
xlab("Concentration") +
ylab("log(Normalized Cell Counts)") +
ggtitle("Normalized Cell Counts by Concentration and Sample") +
labs(colour="Sample") +
facet_wrap(~Concentration) +
theme_classic()
setwd("~/Dropbox (OMRF)/Github/CRISPRScreenAnalysis/Vignettes/vignette4Data")
